events {
    worker_connections 1024;
}

http {
    upstream nodejs_app {
        server app1:3000;
        server app2:3000;
    }

    server {
        listen 80;
        server_name myapp.uz;

        location / {
            proxy_pass http://nodejs_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    server {
        listen 80;
        server_name my-mongodb.uz;

        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name myapp.uz;

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        location / {
            proxy_pass http://nodejs_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    server {
        listen 443 ssl;
        server_name my-mongodb.uz;

        ssl_certificate /etc/nginx/ssl/nginx.crt;
        ssl_certificate_key /etc/nginx/ssl/nginx.key;

        location / {
            proxy_pass http://mongodb:27017;    
        }   
    }
}

stream {
    upstream mongodb {
        server mongodb:27017;
    }

    server {
        listen 27017;
        proxy_pass mongodb;
    }
}
